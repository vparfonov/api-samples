/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.stocktrader.core;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.text.DecimalFormat;
import javafx.application.Platform;
import javafx.geometry.Rectangle2D;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.stage.Modality;
import javafx.stage.Screen;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;
import org.stocktrader.api.SampleTableModel;
import org.stocktrader.api.StockTraderUtilities;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
    dtd = "-//org.stocktrader.core//Core//EN",
autostore = false)
@TopComponent.Description(
    preferredID = "CoreTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "output", openAtStartup = true)
@ActionID(category = "Window", id = "org.stocktrader.core.CoreTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
    displayName = "#CTL_CoreAction",
preferredID = "CoreTopComponent")
@Messages({
    "CTL_CoreAction=Core",
    "CTL_CoreTopComponent=Core Window",
    "HINT_CoreTopComponent=This is a Core window"
})
public final class CoreTopComponent extends TopComponent {

    private static SampleTableModel tableModel;

    public CoreTopComponent() {
        initComponents();
        setName(Bundle.CTL_CoreTopComponent());
        setToolTipText(Bundle.HINT_CoreTopComponent());
        setLayout(new BorderLayout());
        init();

    }

    public void init() {
        tableModel = StockTraderUtilities.getSampleTableModel();

        //JTable
        JTable table = new JTable(tableModel);
        table.setAutoCreateRowSorter(true);
        table.setGridColor(Color.DARK_GRAY);

        DecimalFormatRenderer renderer = new DecimalFormatRenderer();
        renderer.setHorizontalAlignment(JLabel.RIGHT);
        for (int i = 0; i < table.getColumnCount(); i++) {
            table.getColumnModel().getColumn(i).setCellRenderer(renderer);
        }
        JScrollPane scrollPane = new JScrollPane(table);
        add(scrollPane, BorderLayout.CENTER);
        //add(table, BorderLayout.CENTER);
        createDummy();
    }

    private void createDummy() {
        Platform.runLater(new Runnable() {
            @Override
            public void run() {
                // Workaround
                Stage dummyPopup = new Stage();
                dummyPopup.initModality(Modality.NONE);
                // set as utility so no iconification occurs
                dummyPopup.initStyle(StageStyle.UTILITY);
                // set opacity so the window cannot be seen
                dummyPopup.setOpacity(0d);
                // not necessary, but this will move the dummy stage off the screen
                final Screen screen = Screen.getPrimary();
                final Rectangle2D bounds = screen.getVisualBounds();
                dummyPopup.setX(bounds.getMaxX());
                dummyPopup.setY(bounds.getMaxY());
                // create/add a transparent scene
                final Group root = new Group();
                dummyPopup.setScene(new Scene(root, 1d, 1d, javafx.scene.paint.Color.TRANSPARENT));
                // show the dummy stage
                dummyPopup.show();

                // size back to scene size
                dummyPopup.sizeToScene();

                // if you centered it before hiding
                //dummyPopup.centerOnScreen();      
            }
        });
    }

    private static class DecimalFormatRenderer extends DefaultTableCellRenderer {

        private static final DecimalFormat formatter = new DecimalFormat("#.0");

        @Override
        public Component getTableCellRendererComponent(
                JTable table, Object value,
                boolean isSelected,
                boolean hasFocus,
                int row,
                int column) {
            value = formatter.format((Number) value);
            return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
