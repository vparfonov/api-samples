/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.netbeans.preso.integrato;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.io.File;
import javax.swing.AbstractAction;
import javax.swing.Action;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.awt.StatusDisplayer;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.view.BeanTreeView;
import org.openide.filesystems.FileChooserBuilder;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.NbPreferences;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
    dtd = "-//org.netbeans.preso.integrato//Presentations//EN",
autostore = false)
@TopComponent.Description(
    preferredID = "PresentationsTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "properties", openAtStartup = true)
@ActionID(category = "Window", id = "org.netbeans.preso.integrato.PresentationsTopComponent")
@ActionReference(path = "Menu/Window/Output" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
    displayName = "#CTL_PresentationsAction",
preferredID = "PresentationsTopComponent")
@Messages({
    "CTL_PresentationsAction=Presentation",
    "CTL_PresentationsTopComponent=Presentation Window",
    "HINT_PresentationsTopComponent=Presentation window"
})
public final class PresentationsTopComponent extends TopComponent implements ExplorerManager.Provider {

    private ExplorerManager manager = new ExplorerManager();

    public PresentationsTopComponent() {

        initComponents();
        setName(Bundle.CTL_PresentationsTopComponent());
        setToolTipText(Bundle.HINT_PresentationsTopComponent());

        setLayout(new BorderLayout());
        BeanTreeView btv = new BeanTreeView();
        add(btv, BorderLayout.CENTER);

        AbstractNode rootNode = new AbstractNode(Children.create(new PresentationChildfactory(), true)) {
            @Override
            public Action[] getActions(boolean context) {
                return new Action[]{
                    new AbstractAction("Open PDF File From Disk") {
                        @Override
                        public void actionPerformed(ActionEvent e) {
                            FileChooserBuilder fcb = new FileChooserBuilder(System.getProperty("netbeans.user"));
                            File file = fcb.showOpenDialog();
                            if (file != null) {
                                setDisplayName(file.getName());
                                NbPreferences.forModule(PresentationsTopComponent.class).put("presentationFile", file.getAbsolutePath());
                            }
                        }
                    },
                    new AbstractAction("Open PDF File From URL") {
                        @Override
                        public void actionPerformed(ActionEvent e) {
                            NotifyDescriptor.InputLine line = new NotifyDescriptor.InputLine("URL:", "URL to PDF File");
                            DialogDisplayer.getDefault().notify(line);
                            String url = line.getInputText();
                            if (url != null && url.startsWith("http://") && url.endsWith("pdf")) {
                                NbPreferences.forModule(PresentationsTopComponent.class).put("presentationFile", url);
                                setDisplayName(url);
                                StatusDisplayer.getDefault().setStatusText("URL Location: " + url);
                            } else {
                                StatusDisplayer.getDefault().setStatusText("You didn't specify a URL.");
                            }
                        }
                    }};
            }
        };
        rootNode.setIconBaseWithExtension("org/netbeans/preso/integrato/black_dot.png");
        rootNode.setDisplayName("Right-click to load a PDF file");

        manager.setRootContext(rootNode);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return manager;
    }
}
