/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.harbor.viewer;

import java.awt.BorderLayout;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.awt.UndoRedo;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.explorer.view.BeanTreeView;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.nodes.Node;
import org.openide.util.Lookup;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.harbor.viewer//ShipViewer//EN",
autostore = false)
@TopComponent.Description(preferredID = "ShipViewerTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "org.harbor.viewer.ShipViewerTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_ShipViewerAction",
preferredID = "ShipViewerTopComponent")
public final class ShipViewerTopComponent
        extends TopComponent implements ExplorerManager.Provider {

    private ExplorerManager controller =
            new ExplorerManager();

    public ShipViewerTopComponent() {

        initComponents();

        setName(NbBundle.getMessage(ShipViewerTopComponent.class, "CTL_ShipViewerTopComponent"));
        setToolTipText(NbBundle.getMessage(ShipViewerTopComponent.class, "HINT_ShipViewerTopComponent"));

        setLayout(new BorderLayout());

        BeanTreeView bv = new BeanTreeView();
        bv.setRootVisible(false);

        Children ships = Children.create(new ShipChildFactory(), true);
        Node rootNode = new AbstractNode(ships);

        controller.setRootContext(rootNode);

        requestActive();

        add(bv, BorderLayout.CENTER);

        associateLookup(ExplorerUtils.createLookup(controller, getActionMap()));

//        try {
//    controller.setSelectedNodes(
//            rootNode.
//            getChildren().getNodes());
////    controller.setExploredContext(
////            rootNode);
//} catch (PropertyVetoException ex) {
//    Exceptions.printStackTrace(ex);
//}
    }
    
//    @Override
//    public UndoRedo getUndoRedo() {
//        return Lookup.getDefault().lookup(
//                UndoRedo.Manager.class);
//    }

    @Override
    public ExplorerManager getExplorerManager() {
        return controller;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
