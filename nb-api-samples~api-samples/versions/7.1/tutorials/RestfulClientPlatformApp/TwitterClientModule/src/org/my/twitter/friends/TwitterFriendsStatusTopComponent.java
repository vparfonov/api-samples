/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.my.twitter.friends;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import twitter.twitteroauth.twitterresponse.StatusType;
import twitter.twitteroauth.twitterresponse.Statuses;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.my.twitter.friends//TwitterFriendsStatus//EN",
autostore = false)
@TopComponent.Description(preferredID = "TwitterFriendsStatusTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = true)
@ActionID(category = "Window", id = "org.my.twitter.friends.TwitterFriendsStatusTopComponent")
@ActionReference(path = "Menu/Window" /*
 * , position = 333
 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_TwitterFriendsStatusAction",
preferredID = "TwitterFriendsStatusTopComponent")
@Messages({
    "CTL_TwitterFriendsStatusAction=TwitterFriendsStatus",
    "CTL_TwitterFriendsStatusTopComponent=TwitterFriendsStatus Window",
    "HINT_TwitterFriendsStatusTopComponent=This is a TwitterFriendsStatus window"
})
public final class TwitterFriendsStatusTopComponent extends TopComponent {

    public TwitterFriendsStatusTopComponent() {
        initComponents();
        setName(Bundle.CTL_TwitterFriendsStatusTopComponent());
        setToolTipText(Bundle.HINT_TwitterFriendsStatusTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        loginButton = new javax.swing.JButton();
        getStatusesButton = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        org.openide.awt.Mnemonics.setLocalizedText(loginButton, org.openide.util.NbBundle.getMessage(TwitterFriendsStatusTopComponent.class, "TwitterFriendsStatusTopComponent.loginButton.text")); // NOI18N
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(getStatusesButton, org.openide.util.NbBundle.getMessage(TwitterFriendsStatusTopComponent.class, "TwitterFriendsStatusTopComponent.getStatusesButton.text")); // NOI18N
        getStatusesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getStatusesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loginButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getStatusesButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginButton)
                    .addComponent(getStatusesButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        TwitterClient.login();
        getStatusesButton.setEnabled(true);
        loginButton.setEnabled(false);
    }//GEN-LAST:event_loginButtonActionPerformed

    private void getStatusesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getStatusesButtonActionPerformed
        TwitterClient client = new TwitterClient("xml");
        client.initOAuth();
        Statuses response = client.getFriendsTimeline(Statuses.class, null, null, null, "10");
        response.getStatus().size();
        String text = "";
        for (StatusType st : response.getStatus()) {
            text += st.getUser().getName() + ":  " + st.getText() + "\n";
        }
        jTextArea1.setText(text);
    }//GEN-LAST:event_getStatusesButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton getStatusesButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton loginButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
