/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.benchmark.generator;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.Set;
import javax.swing.JCheckBox;
import javax.swing.JPanel;
import net.miginfocom.swing.MigLayout;
import org.openide.filesystems.FileObject;
import org.openide.filesystems.URLMapper;

public final class BenchmarkGeneratorVisualPanel2 extends JPanel {

    private List selectedProps = new ArrayList();

    public List getSelectedProps() {
        return selectedProps;
    }

    BenchmarkGeneratorVisualPanel2() {
        initComponents();
    }

    @Override
    public String getName() {
        return "Set Benchmark Properties";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    void setfileLoc(String fileLoc) throws FileNotFoundException, IOException {
        removeAll();
        setLayout(new MigLayout());
        Properties props = new Properties();
        URL url = new URL(fileLoc);
        FileObject fo = URLMapper.findFileObject(url);
        props.load(fo.getInputStream());
        Set<String> stringPropertyNames = props.stringPropertyNames();
        for (String string : stringPropertyNames) {
            if (!string.equals("name")) {
                final JCheckBox box = new JCheckBox(string);
                box.addItemListener(new ItemListener() {
                    @Override
                    public void itemStateChanged(ItemEvent e) {
                        final String propertyName = box.getText();
                        if (box.isSelected() && !selectedProps.contains(propertyName)) {
                            selectedProps.add(propertyName);
                        } else {
                            if (selectedProps.contains(propertyName)) {
                                selectedProps.remove(propertyName);
                            }
                        }
                    }
                });
                add(box, "wrap");
            }
        }
    }
    
}
